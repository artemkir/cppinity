# Collect engine sources/headers
file(GLOB_RECURSE ENGINE_SOURCES CONFIGURE_DEPENDS src/*.cpp src/*.c)
file(GLOB_RECURSE ENGINE_HEADERS CONFIGURE_DEPENDS include/*.h)

# Exclude sokol_wrapper.c from ENGINE_SOURCES
list(FILTER ENGINE_SOURCES EXCLUDE REGEX "sokol_wrapper\\.c$")
list(FILTER ENGINE_SOURCES EXCLUDE REGEX "sokol_stub\\.c$")

# Define Engine library
add_library(Engine STATIC ${ENGINE_SOURCES} ${ENGINE_HEADERS})

# Auto-generate umbrella header: Engine.h
set(ENGINE_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include")
set(GENERATED_INCLUDE_DIR "${CMAKE_CURRENT_BINARY_DIR}/generated")
file(MAKE_DIRECTORY "${GENERATED_INCLUDE_DIR}")

# Collect all public headers under include/, but exclude third-party folders like stb/
file(GLOB_RECURSE ENGINE_PUBLIC_HEADERS CONFIGURE_DEPENDS
    "${ENGINE_INCLUDE_DIR}/*.h"
)
list(FILTER ENGINE_PUBLIC_HEADERS EXCLUDE REGEX "/stb/")

# Make relative to include/ and sort for stable output
set(ENGINE_PUBLIC_HEADERS_REL)
foreach(h ${ENGINE_PUBLIC_HEADERS})
    file(RELATIVE_PATH rel "${ENGINE_INCLUDE_DIR}" "${h}")
    list(APPEND ENGINE_PUBLIC_HEADERS_REL "${rel}")
endforeach()
list(SORT ENGINE_PUBLIC_HEADERS_REL)

# Write Engine.h
set(ENGINE_UMBRELLA "${GENERATED_INCLUDE_DIR}/Engine.h")
set(_content "// Auto-generated by CMake. Do not edit.\n#pragma once\n\n")
foreach(rel ${ENGINE_PUBLIC_HEADERS_REL})
    string(APPEND _content "#include \"${rel}\"\n")
endforeach()
file(WRITE "${ENGINE_UMBRELLA}" "${_content}")

# Make generated header and other includes visible to Engine and its dependents
target_include_directories(Engine PUBLIC
    "${ENGINE_INCLUDE_DIR}"          # Real headers
    "${GENERATED_INCLUDE_DIR}"       # Exposes Engine.h
    "${sokol_SOURCE_DIR}"            # For sokol headers (needed by sokol lib)
    "${CMAKE_CURRENT_SOURCE_DIR}/include"  # For sokol_wrapper.h
)

# Sokol wrapper lib (actual)
add_library(Sokol STATIC ${CMAKE_CURRENT_SOURCE_DIR}/src/sokol_wrapper.c)
target_include_directories(Sokol PUBLIC
    "${CMAKE_CURRENT_SOURCE_DIR}/include"  # For sokol_wrapper.h
    "${sokol_SOURCE_DIR}"                 # For sokol headers
)
target_link_libraries(Sokol PUBLIC platform_deps)  # Links real Sokol deps

# Sokol stub lib (for tests)
add_library(SokolStub STATIC ${CMAKE_CURRENT_SOURCE_DIR}/src/sokol_stub.c)
target_include_directories(SokolStub PUBLIC
    "${CMAKE_CURRENT_SOURCE_DIR}/include"  # For sokol_wrapper.h
)

# Engine does not link to sokol or sokol stub (linked by consumers: samples or tests)
# No platform_deps for Engine, as they're handled by sokol for samples
target_link_libraries(Engine PUBLIC)  # Empty, or add non-graphics deps if needed